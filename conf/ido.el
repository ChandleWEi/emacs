;;; http://www.emacs.cn/~chunyu/Emacs/Note
(require 'ido)
'(ido-decorations (quote ("{" "}" " | " " | ..." "[" "]" " [No match]" " [M    >>atched]" " [Not readable]" " [Too big]")))
'(ido-default-buffer-method (quote selected-window))
'(ido-default-file-method (quote selected-window))
'(ido-enable-tramp-completion t)
'(ido-enabled (quote (quote both)) t)
'(ido-everywhere t)
'(ido-mode (quote both) nil (ido)) 
'(ido-show-dot-for-dired t)
'(ido-use-filename-at-point (quote guess))

(setq ido-max-prospects 8)
(setq ido-auto-merge-delay-time 2)
(setq ido-show-dot-for-dired nil)
(setq ido-use-filename-at-point t)
(setq ido-enable-tramp-completion t)
(setq ido-save-directory-list-file "~/.emacs.d/ido.last")
(ido-everywhere 1)
(ido-mode 1)
(add-hook 'ido-setup-hook 'llasram/ido-extra-keys)

(defun llasram/ido-extra-keys ()
  "Add my keybindings for ido."
  (define-key ido-completion-map "\C-h" 'ido-delete-backward-updir)
  (define-key ido-completion-map "\C-n" 'ido-next-match)
  (define-key ido-completion-map "\C-f" 'ido-next-match)
  (define-key ido-completion-map "\C-p" 'ido-prev-match)
  (define-key ido-completion-map "\C-b" 'ido-prev-match)
  (define-key ido-completion-map " "    'ido-exit-minibuffer))

'(ido-first-match ((t (:foreground "blue"))))
'(ido-only-match ((((class color)) (:foreground "firebrick"))))
'(ido-subdir ((((min-colors 88) (class color)) (:foreground "darkgreen"))))
